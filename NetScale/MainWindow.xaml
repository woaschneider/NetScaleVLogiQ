<mmwpf:mmMainAppWindow x:Class="HWB.NETSCALE.FRONTEND.WPF.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2006"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:mmwpf="clr-namespace:OakLeaf.MM.Main.WPF;assembly=OakLeaf.MM2010.WPF"
                       xmlns:my="clr-namespace:HardwareDevices;assembly=HardwareDevices"
                       xmlns:ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                       Title="Hamburger Waagenbau GmbH"
                       Width="800"
                       Height="600"
                       WindowState="Maximized">
    <mmwpf:mmBaseWindow.Resources>

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#CCC" />
            <GradientStop Offset="1.0" Color="#444" />
        </LinearGradientBrush>
        <!--  Disabled Brushes are used for the Disabled look of each control  -->
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <!--  Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control  -->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <!--  LightBrush is used for content areas such as Menu, Tab Control background  -->
        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFF" />
            <GradientStop Offset="1.0" Color="#EEE" />
        </LinearGradientBrush>

        <!--
            Simple ScrollViewer
            ScrollViewer is a Grid control which has a ContentPresenter and a Horizontal and Vertical ScrollBar
            It is used by ListBox, MenuItem, ComboBox, and TreeView
        -->
        <Style BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Row="0"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />

                            <!--  The visibility of the ScrollBars is controlled by the implementation fo the control  -->
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Orientation="Horizontal"
                                       Style="{DynamicResource SimpleScrollBar}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{Binding Path=HorizontalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       Style="{DynamicResource SimpleScrollBar}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{Binding Path=VerticalOffset,
                                                       Mode=OneWay,
                                                       RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Simple Menu - This template uses a StackPanel to layout MenuItems  -->
        <Style TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{DynamicResource LightBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Grid>
                            <Border x:Name="Border"
                                    Margin="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            <StackPanel Background="{TemplateBinding Background}"
                                        ClipToBounds="True"
                                        IsItemsHost="True"
                                        Orientation="Horizontal" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  This BitmapEffect is used by the Simple MenuItem  -->
        <DropShadowBitmapEffect x:Key="PopupDropShadow"
                                ShadowDepth="1.5"
                                Softness="0.15" />

        <!--  Simple MenuItem - The template uses triggers to provide four different arrangements of menu item which are set via the Role property  -->
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>

                                <!--
                                    The Grid is used to hold together columns for an Icon, Content, Glyph checkmark and Arrow to show the next level
                                    Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together
                                -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"
                                                      MinWidth="17"
                                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                    <ColumnDefinition Width="14" />
                                </Grid.ColumnDefinitions>

                                <!--  ContentPresenter to show an Icon if needed  -->
                                <ContentPresenter x:Name="Icon"
                                                  Margin="4,0,6,0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon" />

                                <!--  Glyph is a checkmark if needed for a checkable menu  -->
                                <Grid x:Name="GlyphPanel"
                                      Margin="4,0,6,0"
                                      VerticalAlignment="Center"
                                      Visibility="Hidden">
                                    <Path x:Name="GlyphPanelpath"
                                          VerticalAlignment="Center"
                                          Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                          Fill="{TemplateBinding Foreground}"
                                          FlowDirection="LeftToRight" />
                                </Grid>

                                <!--  Content for the menu text etc  -->
                                <ContentPresenter x:Name="HeaderHost"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />

                                <!--  Arrow drawn path which points to the next level of the menu  -->
                                <Grid x:Name="ArrowPanel"
                                      Grid.Column="3"
                                      Margin="4,0,6,0"
                                      VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath"
                                          VerticalAlignment="Center"
                                          Data="M0,0 L0,8 L4,4 z"
                                          Fill="{TemplateBinding Foreground}" />
                                </Grid>

                                <!--  The Popup is the body of the menu which expands down or across depending on the level of the item  -->
                                <Popup x:Name="SubMenuPopup"
                                       AllowsTransparency="true"
                                       Focusable="false"
                                       IsOpen="{Binding Path=IsSubmenuOpen,
                                                        RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                       VerticalOffset="-3">
                                    <Grid x:Name="SubMenu">
                                        <Border x:Name="SubMenuBorder"
                                                Background="{DynamicResource WindowBackgroundBrush}"
                                                BorderBrush="{DynamicResource SolidBorderBrush}"
                                                BorderThickness="1" />

                                        <!--  StackPanel holds children of the menu. This is set bu IsItemsHost=True  -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Popup>

                            </Grid>
                        </Border>

                        <!--  These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role  -->
                        <ControlTemplate.Triggers>

                            <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Margin" Value="0,1,0,1" />
                                <Setter Property="Padding" Value="6,3,6,3" />
                                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                                <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Margin" Value="0,1,0,1" />
                                <Setter Property="Padding" Value="6,3,6,3" />
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <!--  Role = SubMenuHeader : this is a child menu item which does not have children  -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            </Trigger>

                            <!--  Role = SubMenuItem : this is a child menu item which has children  -->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top" />
                                <Setter Property="Padding" Value="0,2,0,2" />
                                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                            </Trigger>

                            <!--  If no Icon is present the we collapse the Icon Content  -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <!--  The GlyphPanel contains the CheckMark  -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                            </Trigger>

                            <Trigger SourceName="SubMenuPopup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="SubMenu" Property="Margin" Value="0,0,3,3" />
                                <Setter TargetName="SubMenu" Property="SnapsToDevicePixels" Value="true" />
                                <Setter TargetName="SubMenuBorder" Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" />
                            </Trigger>

                            <!--  Using the system colors for the Menu Highlight and IsEnabled  -->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  Simple Separator - This template is used for a Separator in a menu  -->
        <Style TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1" />
            <Setter Property="Margin" Value="0,2,0,2" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFCA5132" />
        </Style>

    </mmwpf:mmBaseWindow.Resources>
    <mmwpf:mmBaseWindow.Background>
        <SolidColorBrush Color="{DynamicResource WindowBackcolor}" />
    </mmwpf:mmBaseWindow.Background>
    <mmwpf:mmBaseWindow.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded" />
    </mmwpf:mmBaseWindow.Triggers>
    <mmwpf:mmBaseWindow.ContextMenu>
        <ContextMenu />
    </mmwpf:mmBaseWindow.ContextMenu>
    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="257*" />
            <ColumnDefinition Width="261*" />
            <ColumnDefinition Width="260*" />
        </Grid.ColumnDefinitions>
        <Menu Grid.ColumnSpan="3"
              Height="23"
              VerticalAlignment="Top">
            <MenuItem x:Name="FilePad"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Top"
                      Header="File">
                <MenuItem Header="Print..." />
                <MenuItem x:Name="LocalizeSetupMenuItem"
                          Checked="LocalizeSetupMenuItem_Checked"
                          Header="Localize Setup"
                          IsCheckable="True"
                          Unchecked="LocalizeSetupMenuItem_Unchecked" />
                <MenuItem x:Name="SecuritySetupMenuItem"
                          Checked="SecuritySetupMenuItem_Checked"
                          Header="Security Setup"
                          IsCheckable="True"
                          Unchecked="SecuritySetupMenuItem_Unchecked" />
                <Separator />
                <MenuItem x:Name="FileExitItem"
                          Click="FileExitItem_Click"
                          Header="Exit" />
            </MenuItem>
            <MenuItem x:Name="ListsPad" Header="Lists">
                <MenuItem x:Name="UsersMenuItem"
                          Click="UsersMenuItem_Click"
                          Header="Users" />
            </MenuItem>
        </Menu>


        <ribbon:Ribbon x:Name="Ribbon"
                       Grid.ColumnSpan="3"
                       Height="136"
                       VerticalAlignment="Top"
                       Background="#FF77ABDC">
            <ribbon:Ribbon.ApplicationMenu>
                <ribbon:RibbonApplicationMenu>
                    <ribbon:RibbonApplicationMenuItem x:Name="MenuItem1"
                                                      Click="FileExitItem_Click"
                                                      Header="Schließen"
                                                      ImageSource="Images\1297283615_Log Out.png" />
                </ribbon:RibbonApplicationMenu>
            </ribbon:Ribbon.ApplicationMenu>

            <ribbon:RibbonTab x:Name="wiegen" Header="Wiegebetrieb">
                <ribbon:RibbonGroup x:Name="Group1" Header="Betrieb">

                    <ribbon:RibbonButton x:Name="cmdStartWaegebetrieb"
                                         Click="cmdStartWaegebetrieb_Click"
                                         FontSize="14"
                                         Label="Wiegebetrieb  "
                                         LargeImageSource="Images\1299661846_weight.png" />

                </ribbon:RibbonGroup>

            </ribbon:RibbonTab>

            <ribbon:RibbonTab x:Name="StammdatenTab" Header="Stammdaten">
                <ribbon:RibbonGroup x:Name="Group2" Header="Stammdaten">

                    <ribbon:RibbonButton x:Name="cmdAP"
                                         Click="cmdAP_Click"
                                         FontSize="14"
                                         Label="  Adressen  "
                                         LargeImageSource="Images\1328089907_address-book.png" />

                    <ribbon:RibbonButton x:Name="cmdMG"
                                         Click="cmdMG_Click"
                                         FontSize="14"
                                         Label="  Sorten  "
                                         LargeImageSource="Images\1298575723_advancedsettings.png" />
                    <ribbon:RibbonButton x:Name="cmdKFZ"
                                         Click="cmdKFZ_Click"
                                         FontSize="14"
                                         Label="  Kfz  "
                                         LargeImageSource="Images\1298027249_delivery.png" />
                    <ribbon:RibbonButton x:Name="cmdMandant"
                                         Click="cmdMandant_Click"
                                         FontSize="14"
                                         Label="  Mandant  "
                                         LargeImageSource="Images\1360083317_Home.png" />


                </ribbon:RibbonGroup>

            </ribbon:RibbonTab>

            <ribbon:RibbonTab x:Name="SetupTab" Header="Einstellungen">
                <ribbon:RibbonGroup x:Name="Group3" Header="Tools">

                    <ribbon:RibbonButton x:Name="cmdSetUpWaagen"
                                         Click="cmdSetUpWaagen_Click"
                                         FontSize="14"
                                         Label="  Waagen  "
                                         LargeImageSource="Images\Disomat-Tersus.jpg" />

                    <ribbon:RibbonButton x:Name="cmdSetUp"
                                         Click="cmdSetUp_Click"
                                         FontSize="14"
                                         Label="  Programm  "
                                         LargeImageSource="Images\1298575723_advancedsettings.png" />
                    <ribbon:RibbonButton x:Name="cmdUser"
                                         Click="cmdUser_Click"
                                         FontSize="14"
                                         Label="  Benutzer  "
                                         LargeImageSource="Images\1331816268_userconfig.png" />


                    <ribbon:RibbonButton x:Name="Module"
                                         Click="Module_Click"
                                         FontSize="14"
                                         Label=" Module "
                                         LargeImageSource="Images\1334130471_blockdevice.png" />

                    <ribbon:RibbonButton x:Name="cmdInfo"
                                         Click="cmdInfo_Click"
                                         FontSize="14"
                                         Label=" Info "
                                         LargeImageSource="Images\1322055244_Info_Box_Blue.png" />


                </ribbon:RibbonGroup>

            </ribbon:RibbonTab>

        </ribbon:Ribbon>
        <Image Name="image1"
               Grid.Column="1"
               Width="257"
               Height="210"
               Margin="1,206,3,145"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Source="/HWB.NETSCALE.FRONTEND.WPF;component/Images/Logo_Hamburger_Waagenbau_300dpi.bmp"
               Stretch="UniformToFill" />
        <Image Name="image2"
               Grid.Column="2"
               Width="260"
               Height="48"
               Margin="0,66,0,0"
               HorizontalAlignment="Right"
               VerticalAlignment="Top"
               Source="/HWB.NETSCALE.FRONTEND.WPF;component/Images/rhenus-logo.jpg"
               Stretch="Fill" />
    </Grid>
</mmwpf:mmMainAppWindow>